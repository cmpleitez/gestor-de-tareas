# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy PHP app to Azure Web App - gestor-de-tareas

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, openssl, tokenizer, json, fileinfo, curl, zip

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Node.js dependencies
        run: npm ci --only=production

      - name: Create production package
        run: |
          # Crear directorio temporal para el paquete de producci√≥n
          mkdir -p production-package
          
          # Copiar solo los archivos necesarios para producci√≥n
          # INCLUYENDO vendor/ y node_modules/ compilados
          rsync -av --exclude='.git' \
            --exclude='.github' \
            --exclude='docs' \
            --exclude='tests' \
            --exclude='storage/logs' \
            --exclude='storage/framework/cache' \
            --exclude='storage/framework/sessions' \
            --exclude='storage/framework/views' \
            --exclude='.env' \
            --exclude='*.log' \
            --exclude='*.sws' \
            --exclude='*.code-workspace' \
            --exclude='deployment.sh' \
            --exclude='consulta_tarea.php' \
            ./ production-package/
          
          # Crear directorios necesarios para Laravel
          mkdir -p production-package/storage/framework/cache
          mkdir -p production-package/storage/framework/sessions
          mkdir -p production-package/storage/framework/views
          mkdir -p production-package/storage/logs
          
          # Establecer permisos correctos
          chmod -R 755 production-package/storage
          chmod -R 755 production-package/bootstrap/cache

      - name: Upload production package
        uses: actions/upload-artifact@v4
        with:
          name: production-package
          path: production-package/
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download production package
        uses: actions/download-artifact@v4
        with:
          name: production-package
          path: ./
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_4E32D6996EE44E27B682A3A93804095D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0A1A76F447F64375B2A345BB22749AB1 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_5FA91445EA9845338831714D1E7FF5B7 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'gestor-de-tareas'
          slot-name: 'Production'
          package: ./

      - name: Run database migrations and seeders
        run: |
          echo "üóÑÔ∏è  Configurando base de datos..."
          
          # Esperar un momento para que Azure termine el despliegue
          sleep 30
          
          # Ejecutar migraciones
          echo "üìä Ejecutando migraciones..."
          php artisan migrate --force
          
          # Ejecutar seeders
          echo "üå± Ejecutando seeders..."
          php artisan db:seed --force
          
          echo "‚úÖ Base de datos configurada correctamente"

      - name: Post-deployment verification
        run: |
          echo "‚úÖ Deployment completed successfully!"
          echo "üåê App deployed to: https://gestor-de-tareas.azurewebsites.net"
          echo "üì¶ Package size: $(du -sh . | cut -f1)"
          echo "üìÅ Files deployed: $(find . -type f | wc -l)"
          echo "üí° Azure instal√≥ autom√°ticamente las dependencias PHP y Node.js"
          echo "üóÑÔ∏è  Base de datos configurada con migraciones y seeders"
          